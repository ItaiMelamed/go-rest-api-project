# ServiceAccount for workflow deployment steps
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argo-deployer
  namespace: argo
---
# ClusterRole for managing app resources
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argo-deployer-clusterrole
rules:
  - apiGroups: ["", "apps", "extensions"]
    resources: ["deployments", "services", "pods"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]
---
# RoleBinding in app namespace for argo-deployer
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-deployer-app-binding
  namespace: app
subjects:
  - kind: ServiceAccount
    name: argo-deployer
    namespace: argo
roleRef:
  kind: ClusterRole
  name: argo-deployer-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# RoleBinding for argooperator in argo namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argo-deployer-argooperator-rolebinding
  namespace: argo
subjects:
  - kind: ServiceAccount
    name: argo-deployer
    namespace: argo
roleRef:
  kind: Role
  name: argooperator-role
  apiGroup: rbac.authorization.k8s.io